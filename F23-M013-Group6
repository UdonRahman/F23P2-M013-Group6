import random

m1 = [7, 4, 10, 5]
d1 = [3, 10, 6, 2]


# Task 1 exploreOnly() - Ashley

# Task 2 exploitOnly() - Abdul


def h(p1: int, p2: int) -> float:
    happy = random.normalvariate(p1, p2)
    return happy
def exploitOnly() -> float:
    t_happiness = 0
    highest_happiness = 0
    happiness = 0
    remaining_days = 196
    c_cafe = 0
    for index in range(len(m1)):
        happiness = h(m1[index], d1[index])
        t_happiness += happiness
        if happiness > highest_happiness:
            highest_happiness = happiness
            c_cafe = index
    while remaining_days > 0:
        t_happiness += h(m1[c_cafe], d1[c_cafe])
        remaining_days -= 1
    return t_happiness
print(exploitOnly(eo))

# Task 3 eGreedy - Anahita 


# Task 4 simulation - Zichen
